<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.sec.busanit.mapper.BoardMapper" >

	<select id="NoticeCount" resultType="int">
		select count(*) from board where course is null
	</select>

	<select id="getNotice" resultType="BoardVO">
		select * from board where course is null order by regdate DESC limit #{pageStart}, #{pageSize}
	</select>

	<select id="ClassNoticeCount" resultType="int">
		select count(*) from board where course = #{course} and role = #{role}
	</select>

	<select id="getClassNotice" resultType="BoardVO">
		select * from board where role = #{role} and course = #{course} order by regdate desc limit #{pageStart}, #{pageSize}
	</select>

	<select id="OneClassNoticeCount" resultType="int">
		select count(*) from board where course = #{course} and role = #{role}
	</select>

	<select id="getOneClassNotice" resultType="BoardVO">
		select * from board where course = #{course} and role = #{role} order by regdate desc
	</select>
	
	<select id="getCurri" resultType="CurriVO">
		select * from curriculum
	</select>
	
	<insert id="insert">
		insert into board (title, content, writer, role, course) 
		values (#{title}, #{content}, #{writer}, #{role}, #{course})
	</insert>
	
	<select id="read" resultType="BoardVO">
		select * from board where bno = #{bno}
	</select>
	
	<update id="update">
		update board set title = #{title}, content = #{content} where bno = #{bno}
	</update>
	
	<delete id="delete">
		delete from board where bno = #{bno}
	</delete>
	
	<!-- 파일 삭제 -->
	<delete id="fileDelete">
		delete from file where fno=#{fno}
	</delete>
	
	<update id="hitCount">
		update board set hitcount = hitcount + 1 where bno = #{bno}
	</update>
	
<!-- 	파일 업로드 부분 -->
	<select id="nextBno" resultType="int">
		select max(bno)+1 from board
	</select>

<!-- 	글 번호 가져오기 -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" resultType = "int" order = "BEFORE">
			select max(bno) + 1 from board
		</selectKey>
		insert into board (bno, title, content, writer)
		values (#{bno}, #{title}, #{content}, #{writer})
	</insert>
<!-- 	파일 추가 -->
	<insert id = "fileRegister">
		insert into file (bno, savefolder, originfile, savefile, filetype)
		values (#{bno}, #{savefolder}, #{originfile}, #{savefile}, #{filetype})
	</insert>
	<insert id = "fileShareInsert">
		insert into file (savefolder, originfile, savefile, filetype, content, writer, role)
		values (#{savefolder}, #{originfile}, #{savefile}, #{filetype}, #{content}, #{writer}, #{role})
	</insert>
	<insert id = "toutFileInsert">
		insert into file (savefolder, originfile, savefile, filetype, content, writer, role, bno)
		values (#{savefolder}, #{originfile}, #{savefile}, #{filetype}, #{content}, #{writer}, #{role}, #{bno})
	</insert>
<!-- 파일 하나 가져오기 -->
	<select id="getFile" resultType = "FileVO">
		select * from file where fno = #{fno}
	</select>
<!-- 	파일 여러 개 가져오기 -->
	<select id = "fileShare" resultType = "FileVO">
		select * from file where role = #{role} order by regdate desc limit #{pageStart}, #{pageSize}
	</select>
	<select id = "fileShareCount" resultType = "int">
		select count(*) from file where role = #{role}
	</select>
	<select id="getFileList" resultType="FileVO">
		select * from file where role=#{role} and bno=#{bno}
	</select>
	<select id="getFileCount" resultType="int">
		select count(*) from file where role=#{role} and bno=#{bno}
	</select>
	<!-- 	파일 갯수 가져오기 -->
	<select id="fileCount" resultType="int">
		select count(*) from file where bno=#{bno}
	</select>
	<!-- search paging -->
	<select id="searchCount" resultType="int">
		select count(bno) from board where course=#{course} and role=#{role} and
		(<include refid="search"/>)
	</select>
	<!-- search file paging -->
	<select id="findFileShareCount" resultType="int">
		select count(*) from file where role=#{role} and
		(<include refid="searchFile"/>)
	</select>

<!-- search -->
	<select id="findAll" resultType="BoardVO">
		select * from board where course=#{course} and role=#{role} and
		(<include refid="search"/>)
		order by regdate desc limit #{pageStart}, #{pageSize}
	</select>
<!-- search file -->
	<select id="findFileShare" resultType="FileVO">
		select * from file where course=#{course} and
		(<include refid="searchFile"/>)
		order by regdate desc limit #{pageStart}, #{pageSize}
	</select>
		
	<sql id="search">
		
				title like CONCAT('%', #{word}, '%')
				or
				writer like CONCAT('%', #{word}, '%')
				or
				content like CONCAT('%', #{word}, '%')
		
	</sql>
	<sql id="searchFile">
		
				originfile like CONCAT('%', #{word}, '%')
				or
				writer like CONCAT('%', #{word}, '%')
				or
				content like CONCAT('%', #{word}, '%')
		
	</sql>
	
</mapper>
	