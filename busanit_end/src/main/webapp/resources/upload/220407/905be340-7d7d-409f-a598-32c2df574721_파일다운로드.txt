
//	파일 다운로드
	@GetMapping("download/{fno}")
	public String download(@PathVariable("fno") int fno, HttpSession session, HttpServletResponse res, HttpServletRequest req) {
		
		FVO fvo = nbs.getFile(fno);
		
		String fileName = null;
		try {
			String path = session.getServletContext().getRealPath("/resource/upload/" + fvo.getSavefolder());
			
			File file = new File (path, fvo.getSavefile());
			
			BufferedInputStream in = new BufferedInputStream (new FileInputStream(file));
			
			String header = req.getHeader("User-Agent");
			
			if ((header.contains("MSIE")) || (header.contains("Trident")) || (header.contains("Edge"))) {
				fileName = URLEncoder.encode(fvo.getOriginfile(), "UTF-8");
			} else {
				fileName = new String(fvo.getOriginfile().getBytes("UTF-8"), "iso-8859-1");
			}
			
			res.setContentType("application/octet-stream");
			
			res.setHeader("Content-Disposition", "attachment;filename=\""+ fileName + "\"");
			
			FileCopyUtils.copy(in, res.getOutputStream());
			
			in.close();
			res.getOutputStream().flush();
			res.getOutputStream().close();
		} catch (Exception e) {
			e.printStackTrace();
			return "fail";
		}
		
		return "";
	}

}
